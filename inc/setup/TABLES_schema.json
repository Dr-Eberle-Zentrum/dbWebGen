{
    "title": "Tables Settings",
    "description": "For each table that you want users be able to view or edit in the app, add a property mapping the table name to a settings object",
    "type": "object",
    "minProperties": 1,
    "options": {
        "disable_collapse": true
    },
    "additionalProperties": {
        "title": "Table",
        "headerTemplate": "{{self.display_name}}",
        "description": "Provide settings for the database tables by adding a property for each table.",
        "type": "object",
        "properties": {
            "display_name": {
                "title": "Display Label",
                "description": "Label used when displaying the table",
                "type": "string",
                "minLength": 1,
                "required": true
            },
            "item_name": {
                "title": "Item Label",
                "description": "Label used when referring to an item in the table",
                "type": "string",
                "minLength": 1,
                "required": true
            },
            "description": {
                "title": "Description",
                "description": "Descriptive text displayed when displaying the table",
                "type": "string",
                "required": true,
                "default": ""
            },
            "actions": {
                "title": "Allowed Actions to be performed on the table",
                "description": "Allowed actions to be performed on the table by default. Can be overriden by various plugin functions (see App Settings).",
                "type": "array",
                "uniqueItems": true,
                "required": true,
                "items": {
                    "title": "Allowed Action",
                    "type": "string",
                    "enum": [ "edit",  "new", "view", "list", "delete", "link", "merge" ]
                },
                "default": [ "edit",  "new", "view", "list", "delete", "link", "merge" ]
            },
            "hide_from_menu": {
                "title": "Suppress In Auto-Generated Menus",
                "description": "This list shall include all actions that identify the menu from which this table shall be hidden even if the action is allowed. Currently only menus for \"new\" and \"list\" actions are generated automatically, so these may be in the array",
                "type": "array",
                "uniqueItems": true,
                "required": true,
                "items": {
                    "title": "Allowed Action",
                    "type": "string",
                    "enum": [ "new", "list" ]
                }
            },
            "primary_key": {
                "title": "Primary Key",
                "description": "Primary key properties",
                "type": "object",
                "required": true,
                "properties": {
                    "auto": {
                        "title": "Auto Value?",
                        "description": "Is the table automatically set by the database, e.g. by a sequence or auto-increment value? If this is the case, you need to specify the Sequence Name below",
                        "type": "boolean",
                        "required": true
                    },
                    "columns": {
                        "title": "Columns",
                        "description": "List all columns that are part of the primary key",
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "required": true,
                        "items": {
                            "title": "Primary Key Column",
                            "type": "string",
                            "required": true,
                            "minLength": 1
                        }
                    },
                    "sequence_name": {
                        "title": "Sequence Name",
                        "description": "If primary key values in this table are auto-generated by a sequence in PostgreSQL, specify the sequence name here. Otherwise, this setting is ignored.",
                        "type": "string",
                        "required": true
                    }
                }
            },
            "show_in_related": {
                "title": "Show Shortcut in Related Tables",
                "description": "In the record view page, there is a dropdown linking to tables where the current record is linked through a foreign key field. Specify whether your want this table to appear in this dropdown list.",
                "type": "boolean",
                "default": true,
                "required": true
            },
            "sort": {
                "title": "Default Sorting",
                "description": "Used for default sorting of the table in list mode. Provide an object mapping a column name to a sort direction",
                "type": "object",
                "additionalProperties": {
                    "description": "Specify the order as ascending (<code>asc</code>) or descending (<code>desc</code>)",
                    "type": "string",
                    "enum": [ "asc", "desc" ],
                    "required": true
                }
            },
            "hooks": {
                "title": "Insert/Update Hooks",
                "description": "This object maps events to function names; Functions to call before/after certain events. For after hooks, the arguments are: (1) table name (2) table settings and (3) primary key/value array; for before hooks the arguments are (1) table name (2) table settings (3) column names array reference, (4) column values array reference",
                "type": "object",
                "properties": {
                    "after_insert": {
                        "title": "After Insert Hook Function",
                        "type": "string",
                        "minLength": 1
                    },
                    "after_update": {
                        "title": "After Update Hook Function",
                        "type": "string",
                        "minLength": 1
                    },
                    "before_insert": {
                        "title": "Before Insert Hook Function",
                        "type": "string",
                        "minLength": 1
                    },
                    "before_update": {
                        "title": "Before Update Hook Function",
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "additional_steps": {
                "title": "Linkage Shortcuts",
                "description": "Linkage shortcuts offered to be performed after a new record was created or a record is being viewed to link this record with others via separate linkage tables. This object maps table names to shortcut settings",
                "type": "object",
                "required": false,
                "additionalProperties": {
                    "title": "Linkage Shortcut",
                    "headerTemplate": "Shortcut \"{{self.label}}\"",
                    "type": "object",
                    "properties": {
                        "label": {
                            "title": "Label",
                            "description": "Label to be displayed in the shortcuts dropdown menu",
                            "type": "string",
                            "minLength": 1,
                            "required": true
                        },
                        "foreign_key": {
                            "title": "Foreign Key",
                            "description": "Foreign key field in this database table",
                            "type": "string",
                            "minLength": 1,
                            "required": true
                        }
                    }
                }

            },
            "custom_actions": {
                "title": "Custom Record Actions",
                "description": "Custom actions on records that are offered in particular viewing modes through particular icons, which will invoke a custom function. Parameters passed are: (1) name of the current table (2) table info object (3) the record retrieved from the database using <code>PDO::FETCH_ASSOC</code> and (4) this custom action object, which means that any additional key/value pairs you add to this array will get passed to the handler function. The expected return value of the handler function is a HTML string representing the icon to display for each record/row in the table.",
                "type": "array",
                "required": false,
                "items": {
                    "title": "Custom Action",
                    "type": "object",
                    "properties": {
                        "mode": {
                            "title": "View Mode",
                            "description": "View mode to which this custom action shall apply. Currently only the mode <code>list</code> is supported",
                            "type": "string",
                            "enum": [ "list" ],
                            "required": true
                        },
                        "handler": {
                            "title": "Handler Function",
                            "description": "Handler function to call for the custom action",
                            "type": "string",
                            "minLength": 1,
                            "required": true
                        }
                    }
                }
            },
            "render_links": {
                "title": "Render Links",
                "description": "If <code>link</code> and <code>list</code> actions are allowed in this table, then there will be an extra icon in the table in <code>list</code> view for each record that allows to view the actual object represented by the record (e.g. an image). Multiple such icons can be defined here.",
                "type": "array",
                "required": "optional",
                "items": {
                    "title": "Link",
                    "type": "object",
                    "properties": {
                        "modes": {
                            "title": "Display Modes",
                            "description": "Display Modes where this render link shall be displayed. If omitted, both <code>list</code> and <code>view</code> modes will show the link.",
                            "type": "array",
                            "uniqueItems": true,
                            "required": false,
                            "items": {
                                "title": "Mode",
                                "type": "string",
                                "enum": [ "list",  "view" ]
                            }
                        },
                        "icon": {
                            "title": "Icon",
                            "description": "The name of a glyphicon that works with bootstrap, e.g. <code>eye-open</code> or <code>trash</code>. See the <a target='_blank' href='http://www.w3schools.com/bootstrap/bootstrap_ref_comp_glyphs.asp'>full list here</a>",
                            "type": "string",
                            "minLength": 1,
                            "required": true
                        },
                        "href_format": {
                            "title": "Link Format",
                            "description": "A URL template that will be used in a <code>sprintf()</code> call, with the Field value (see below) as parameter. Therefore this string should contain one <code>%s</code>",
                            "type": "string",
                            "minLength": 1,
                            "required": true
                        },
                        "field": {
                            "title": "Fields",
                            "description": "Names of fields whose values will be used to replace the <code>%s</code> placeholders in the Link Format",
                            "type": "array",
                            "items": {
                                "title": "Field Name",
                                "type": "string",
                                "minLength": 1
                            },
                            "required": true
                        },
                        "title": {
                            "title": "Tooltip",
                            "description": "Tooltip text shown when hovering the mouse cursor over the link icon",
                            "type": "string",
                            "minLength": 1,
                            "required": true
                        }
                    }
                }
            },
            "form_tabs": {
                "title": "Tabulated Forms",
                "description": "If tabbed record editing and viewing form is desired, these settings need to be filled.",
                "type": "object",
                "required": false,
                "properties": {
                    "tabs": {
                        "title": "Tabs",
                        "description": "Specify any number of tabs and their details",
                        "type": "array",
                        "minItems": 1,
                        "required": true,
                        "items": {
                            "title": "Tab",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "title": "ID",
                                    "description": "Identifier of the tab, to be used in the 'tab' setting of the table's fields.",
                                    "type": "string",
                                    "minLength": 1,
                                    "required": true
                                },
                                "label": {
                                    "title": "Label",
                                    "description": "Label to display on the tab",
                                    "type": "string",
                                    "minLength": 1,
                                    "required": true
                                },
                                "intro": {
                                    "title": "Intro Text",
                                    "description": "If specified, any information (HTML encoded) that should be displayed at the top of the form tab",
                                    "type": "string",
                                    "required": false
                                }
                            }
                        }
                    },
                    "restrict_modes": {
                        "title": "Restricted Views",
                        "description": "By default, the tabs are shown on <code>new</code>, <code>edit</code>, and <code>view</code> forms. You may restrict the forms here",
                        "type": "array",
                        "uniqueItems": true,
                        "required": false,
                        "items": {
                            "title": "View",
                            "type": "string",
                            "enum": [ "edit",  "new", "view" ]
                        }
                    }
                }
            },
            "validation_func": {
                "title": "Form Validation Function",
                "description": "Allows naming a validation function that is invoked upon submission of the <code>new</code> and <code>edit</code> forms. This function needs to be implemented in JavaScript; the file in which it is implemented needs to be included via the <code>add_javascript()</code> helper function; the best place to do this in most circumstances is the <i>Preprocessing Function</i> defined in <i>App Settings</i>.<br>The function is called with three arguments: <ul><li><code>table_name</code>: string (the current table)</li><li><code>table_settings</code>: object (a JS object representing the table's settings from settings.php)</li><li><code>values</code>: object (for each column this object maps the column name to the value entered in the form)</li></ul>Expected return values are: if there are validation errors in the form, the function must return a JSON object that maps each erroneous form field to an error message to be displayed next to the form field; if there are no errors in the form, the function must return <code>null</code>",
                "type": "string",
                "required": false,
                "minLength": 1
            },
            "sort_lookup_raw": {
                "title": "Sort By Raw Values",
                "description": "Whether to perform sorting in list view based on the resolved display expressions of foreign key lookups or based on their raw foreign key values. Setting this to true will speed up the sorting of very large tables by single lookup fields.",
                "type": "boolean",
                "default": false,
                "required": false
            },
            "fields": {
                "title": "Fields",
                "description": "Define the settings for each relevant field in this table by mapping field names to settings objects",
                "type": "object",
                "additionalProperties": {
                    "type": "object",
                    "title": "Field",
                    "headerTemplate": "{{self.label}}",
                    "required": [ "label", "type"],
                    "properties": {
                        "label": {
                            "title": "Label",
                            "description": "Display label for this field",
                            "type": "string",
                            "minLength": 1
                        },
                        "type": {
                            "title": "Type",
                            "description": "Type of the field. Determines the control used in editing form",
                            "type": "string",
                            "enum": [ "T_TextLine", "T_Number", "T_TextArea", "T_Enum", "T_ForeignKeyLookup", "T_Password", "T_FileUpload", "T_PostgisGeometry", "T_Boolean" ],
                            "options": {
                                "enum_titles": [ "Text Line", "Number", "Text Area", "Enum", "Lookup", "Password", "File Upload", "PostGIS Geometry", "Boolean" ]
                            }
                        },
                        "len": {
                            "title": "Maximum Length",
                            "description": "Maximal number of characters that the input control can hold. Relevant only for <i>Text Line</i>, <i>Text Area</i>, and <i>Password</i> fields. If this is set, it can be used in combination with the <i>Display Remaining Character Count</i> setting",
                            "type": "integer",
                            "minimum": 1
                        },
                        "display_remaining_chars": {
                            "title": "Display Remaining Character Count?",
                            "description": "If there is a character limit (see <i>Maximum Length</i> setting) and this setting is <code>true</code>, the remaining character count will be displayed once the user focuses on the control.",
                            "type": "boolean",
                            "default": false
                        },
                        "required": {
                            "title": "Required Field?",
                            "description": "Whether or not a value is required for this field (i.e., there is a <code>NOT NULL</code> constraint)",
                            "type": "boolean",
                            "required": true,
                            "default": false
                        },
                        "editable": {
                            "title": "Editable Field?",
                            "description": "Whether or not this field should be offered in the new/edit forms. For an automatically generated primary key field or some computed field, this should be set to <code>false</code>. Even with then, the field will be displayed in <code>list</code> and <code>view</code> modes. If it is desired to completely hide this field from the user, the field itself should not be defined as a field at all.",
                            "type": "boolean",
                            "default": true
                        },
                        "width_columns": {
                            "title": "Width",
                            "description": "Specifies the number of columns in the bootstrap grid occupied by the input control. If this is not set, the width is calculated automatically for <i>Text Line</i> fields, otherwise the default is 7. Value must be between 1 and 9",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 9
                        },
                        "height_rows": {
                            "title": "Textarea Rows",
                            "description": "Specifies the number of rows to be offered by the input control. Only applicable to <i>Text Area</i> fields",
                            "type": "integer",
                            "minimum": 1,
                            "default": 5
                        },
                        "resizeable": {
                            "title": "Textarea Resizable?",
                            "description": "Controls whether the text area control is vertically resizeable. Only applicable to <i>Text Area</i> fields.",
                            "type": "boolean",
                            "default": true
                        },
                        "help": {
                            "title": "Help Text",
                            "description": "Help text to display about this field in the new/edit forms when the user clicks on the help icon. Can contain HTML.",
                            "type": "string"
                        },
                        "show_setnull": {
                            "title": "Show Set Null Checkbox?",
                            "description": "Whether or not to show a checkbox allowing to explicitly set a <code>NULL</code> value for a non-required field (applies to input and textarea fields). Even if the checkbox is not shown, it is invisibly there and automatically checked/unchecked upon user input.",
                            "type": "boolean",
                            "default": false
                        },
                        "default": {
                            "title": "Default Value",
                            "description": "Default value to set for the field's control when creating a new record. Occurrences of <code>%SESSION_USER%</code> in this string are replace with the current user's ID. For a <i>Boolean</i> field, this can be either <code>'on'</code> (=true) or <code>'off'</code> (=false)",
                            "type": "string"
                        },
                        "options": {
                            "title": "Options",
                            "description": "Currently this is only relevant for <i>Boolean</i> fields. The properties you define here are converted to a JSON object to initizalize the on/off toggle. All initialization options listed under <a href='http://www.bootstraptoggle.com/'>http://www.bootstraptoggle.com/</a> can be provided. You should at least set the labels for 'on' and 'off' status of the toggle according to the purpose of this boolean field. If no options are provided here, the default labels for 'on' and 'off' states of the toggle are based on the localized strings <code>boolean-field.default.yes</code> and <code>boolean-field.default.no</code>, respectively.",
                            "type": "object"
                        },
                        "values": {
                            "title": "Values",
                            "description": "Define values by adding properties to this setting. <ul><li>For <i>Enum</i> type: An object with properties reflecting the actual DB value, and value representing the label to display to the user, e.g. '1': 'January', '2': 'February', ...</li><li>For a <i>Boolean</i> type: This can be used to map 'on' and 'off' to other values than <code>true</code> and <code>false</code>, respectively; if provided, this must be an object with properties 'on' and 'off', e.g. 'on': 'New Car', 'off': 'Used Car'. Note that the values are sent to the DB, so they need to match the type of the column in the DB (in the example the target field could be a text column). It is recommended to provide custom values only for non-boolean columns.",
                            "type": "object"
                        },
                        "allow_create": {
                            "title": "Allow Creating Linked Records?",
                            "description": "If set to <code>false</code>, it suppresses the \"Create New\" button that is displayed next to lookup boxes. Note: this setting might conflict with the <i>Lookup</i> seetting <i>Hide Dropdown</i>",
                            "type": "boolean",
                            "default": true
                        },
                        "lookup": {
                            "title": "Lookup",
                            "description": "Required for <i>Lookup</i> fields. Details of the foreign key relationship with another table to support filling of foreign key dropdown boxes",
                            "type": "object",
                            "required": [ "cardinality", "table", "field", "display" ],
                            "properties": {
                                "cardinality": {
                                    "title": "Cardinality",
                                	"description": "Whether this field is a foreign key in this very table (<code>CARDINALTY_SINGLE</code>), reflecting a 1:n relationship, or whether this relationship is actually represented in a separate table reflecting an m:n relationship (<code>CARDINALITY_MULTIPLE</code>). In the latter case, the <i>Linkage</i> settings must be provided",
                                	"type": "string",
                                    "enum": ["CARDINALITY_SINGLE", "CARDINALITY_MULTIPLE"]
                                },
                                "table": {
                                    "title": "Table",
                                	"description": "Name of the table referenced by this foreign key field",
                                	"type": "string",
                                    "minLength": 1
                                },
                                "field": {
                                    "title": "Field",
                                	"description": "Field in the table referenced by this foreign key field (typically the primary key of the other table)",
                                	"type": "string",
                                    "minLength": 1
                                },
                                "display": {
                                    "title": "Display Expression",
                                	"description": "Since the foreign key is typically a numeric key, this setting can be used to define what to display to the user. Can be either a string literal representing a field name in the referenced table; or it can be an object specifying the columns used in an expression.",
                                	"oneOf": [
                                        {
                                            "type": "string",
                                            "title": "Field Name",
                                            "description": "Specify the name of the field in the lookup table to be displayed in the dropdown box",
                                            "minLength": 1
                                        },
                                        {
                                            "type": "object",
                                            "title": "Expression",
                                            "description": "Provide columns and an expression to display to the user.",
                                            "required": ["columns", "expression"],
                                            "properties": {
                                                "columns": {
                                                    "type": "array",
                                                    "title": "Columns",
                                                    "description": "Specify the columns used in the <i>Expression</i>",
                                                    "minItems": 1,
                                                    "items": {
                                                        "type": "string",
                                                        "title": "Column",
                                                        "minLength": 1
                                                    }
                                                },
                                                "expression": {
                                                    "type": "string",
                                                    "title": "SQL Expression",
                                                    "description": "The SQL expression may refer to indexes in specified in the <i>Columns</i> by their index as <code>%1</code>, <code>%2</code>, etc.",
                                                    "minLength": 1
                                                }
                                            }
                                        }
                                    ]
                                },
                                "sort": {
                                    "title": "Sort By Display Expression",
                                	"description": "In case of multiple lookup values, this setting determines whether the linked records are sorted using the <i>Display Expression</i>. Only relevant for <code>CARDINALITY_MULTIPLE</code>.",
                                	"type": "boolean",
                                    "default": true
                                },
                                "default": {
                                    "title": "Default Value",
                                	"description": "Default option for this foreign key reference to pick from the dropdown when creating a new record. This type should be automatically convertible to text"
                                },
                                "related_label": {
                                    "title": "Label in Referenced Records",
                                	"description": "Text to display in the \"List Related\" dropdown when viewing any record of the table referenced by this field (e.g. \"Cars Sold By This Agent\"). If missing, the label will be constructed automatically from the table's <i>Display Name</i> and the field's <i>Label</i>, (e.g. \"Cars Sales (As Agent)\")",
                                	"type": "string",
                                    "minLength": 1
                                },
                                "async": {
                                    "title": "Asnychronous Fetching of Matching Records",
                                	"description": "When provided, specifies how to dynamically fetch records into the dropdown box based on keyboard input. This is handy if the linked table holds many records",
                                	"type": "object",
                                    "required": ["min_input_len", "delay"],
                                    "properties": {
                                        "min_input_len": {
                                            "title": "Minimum Input Length",
                                        	"description": "Minimum number of characters the user has to type before matching records are fetched",
                                        	"type": "integer"
                                        },
                                        "delay": {
                                            "title": "Delay",
                                        	"description": "Number of milliseconds to wait before sending an Ajax request after a user keystroke",
                                        	"type": "integer",
                                            "default": 0,
                                            "minimum": 0
                                        },
                                        "max_results": {
                                            "title": "Maximum Number of Results to Fetch",
                                        	"description": "If set, the number of results fetched from the async query is limited to this number. If the query would return more results, a notice is displayed to the user to make them aware of this fact",
                                        	"type": "integer",
                                            "minimum": 1
                                        },
                                        "min_threshold": {
                                            "title": "Threshold",
                                        	"description": "The dropdown box will behave like a normal (non-async) control if less then the defined threshold number of options are available. Otherwise, if there are more options, or if this setting is not defined at all, the box will be an async lookup box.",
                                        	"type": "integer",
                                            "minimum": 1
                                        }
                                    }
                                },
                                "label_display_expr_only": {
                                    "title": "Only Display Expression as Label?",
                                	"description": "By default the label for lookup values is composed of the display expression and in parentheses the respective primary key name and value. If you wish to suppress the parentheses, and only use the <i>Display Expression</i> result, set this to <code>true</code>",
                                	"type": "boolean",
                                    "default": false
                                },
                                "hide_dropdown": {
                                    "title": "Hide Dropdown Box?",
                                	"description": "In some cases it might be useful to allow only the creation of new associations using \"Create New\" button, and not by selecting existing records through the dropdown box. If this is set to <code>true</code>, the dropdown box will not be shown. If the field is <code>CARDINALITY_SINGLE</code> and disabled for some reason, the dropdown will be shown regardless of this setting. Note: this setting might conflict with the <i>Allow Creating Linked Records</i> setting of the field. If dropdown is to be hidden, the <i>Allow Creating Linked Records</i> must be enabled as well, otherwise nothing will be shown.",
                                	"type": "boolean",
                                    "default": false
                                },
                                "create_new_label": {
                                    "title": "Button Label for Creating Linked Records",
                                	"description": "Label for the button next to the dropdown box, which allows users to add new records to the linked table",
                                	"type": "string",
                                    "default": "Create New",
                                    "minLength": 1
                                },
                                "allow_edit": {
                                    "title": "Allow Editing Linked Records?",
                                	"description": "Whether to allow the user to edit the associated record from the lookup table. Note that enabling this will only have an effect if the lookup table is configured as a table, and if <code>edit</code> is an allowed action there. If this setting is not provided, the default value will be taken from the <i>Allow Editing Linked Records by Default</i> in the App settings",
                                	"type": "boolean"
                                },
                                "predefined_values": {
                                    "title": "Predefined Values",
                                	"description": "Object mapping fieldnames to their predefined values, which will be used when the user creates a new record using the \"Create New\" button, e.g. <pre>\"name\": \"Barles Chronson\", // string value\n\"height\": 1.78, // numeric value\n\"enemies\": [3,77] // foreign keys for Lookup/CARDINALITY_MULTIPLE field\n\"mother\": { \"field\": \"name\" }</pre>",
                                	"type": "object"
                                },
                                "field_settings_override": {
                                    "title": "Field Settings Override",
                                	"description": "Object mapping fieldnames to settings that override those in defined for the lookup table or the current context. This object will be used when the user creates a new record using the \"Create New\" button. Use this with caution, since it may contradict the constraints in the DB or the dbWebGen logic. Each value is either <code>h</code> (hide the control) or any contextually meaningful combination of<ul><li><code>e</code> ... enable the control</li><li><code>d</code> ... disable the control</li><li><code>r</code> ... make field required</li><li><code>o</code> ... make field optional</li><li><code>s</code> ... show the control if hidden</li></ul>",
                                	"type": "object",
                                    "additionalProperties": { "type" : "string" }
                                },
                                "no_link": {
                                    "title": "Suppress Hyperlinks?",
                                	"description": "Whether to suppress the rendering of a hyperlink to the linked records when viewing and listing records",
                                	"type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "linkage": {
                            "title": "Linkage",
                            "description": "If <i>cardinality</i> was set to <code>CARDINALITY_MULTIPLE</code>, you need to define here the m:n relationship table that links records from this table (via <i>Foreign Key (Self)<i>) with records of the other table (via <i>Foreign Key (Other)<i>)",
                            "type": "object",
                            "required": [ "table", "fk_self", "fk_other" ],
                            "properties": {
                                "table": {
                                    "title": "Table",
                                	"description": "Name of the linkage table",
                                	"type": "string",
                                    "minLength": 1
                                },
                                "fk_self": {
                                    "title": "Foreign Key (Self)",
                                	"description": "Name of the foreign key in the linkage <i>Table<i> which references the present table",
                                	"type": "string",
                                    "minLength": 1
                                },
                                "fk_other": {
                                    "title": "Foreign Key (Other)",
                                	"description": "Name of the foreign key in the linkage <i>Table<i> which references the other table",
                                	"type": "string",
                                    "minLength": 1
                                },
                                "defaults": {
                                    "title": "Default Values",
                                	"description": "Object defining field defaults for non-key fields when creating a new linked record. For each field, occurrences of <code>%SESSION_USER%</code> in the default values will be replaced with the current user's ID",
                                	"type": "object"
                                },
                                "render_func": {
                                    "title": "Rendering Function",
                                	"description": "By default, multiple records are simple separated by a bullet character. By providing a custom function name here, you can change the default behavior for rendering the linkage to be applied when viewing a record. The function takes the following arguments:<ul><li><code>&$field</code> is the field settings array</li><li><code>$item_html</code> is the HTML code for the linked item</li><li><code>$index</code> is the item's index in the list</li><li><code>$total_num_items</code> is the total number of items in the list</li><li><code>&$params</code> is reserved for future use; currently the engine will pass a reference to an empty array</li></ul>The function must return the HTML to be rendered for the current item",
                                	"type": "string",
                                    "minLength": 1
                                },
                                "max_num": {
                                    "title": "Limit",
                                	"description": "If a number greater than zero is provided here, the number of linked records will be limited to this number. When the limit is reached, the dropdown and the Create New button will be disabled. This setting is only considered if cardinality is <code>CARDINALITY_MULTIPLE</code>",
                                	"type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "SRID": {
                            "title": "Spacial Reference ID",
                        	"description": "Spatial Reference ID of the PostGIS geometry; applicable only to <i>PostGIS Geometry</i> fields",
                        	"type": "integer"
                        },
                        "min_len": {
                            "title": "Minimum Password Length",
                        	"description": "This setting is only ueful for type <i>Password</i>. If it is set, users will have to provide a password of this minimum length",
                        	"type": "integer",
                            "minimum": 0
                        },
                        "max_size": {
                            "title": "File Upload: Maximum Size",
                        	"description": "Only evaluated for <i>File Upload</i> fields, to limit the file size for uploads",
                        	"type": "integer",
                            "minimum": 1
                        },
                        "location": {
                            "title": "File Upload: Target Location",
                        	"description": "Required for <i>File Upload</i> fields, to specify the server side subfolder where to store uploaded files",
                        	"type": "string",
                            "minLength": 1
                        },
                        "store": {
                            "title": "File Upload: Storage",
                        	"description": "To specify where the uploaded file shall be stored. Currently storage is only possible on in folder on the server (option: <code>1</code>)",
                        	"type": "integer",
                            "enum": [ 1 ],
                            "default": 1
                        },
                        "allowed_ext": {
                            "title": "File Upload: Allowed Extensions",
                        	"description": "The file extension of the uploaded file will be checked against this array",
                        	"type": "array",
                            "items": {
                                "title": "Extension",
                                "type" : "string",
                                "minLength": 1
                            }
                        },
                        "post_proc": {
                            "title": "File Upload: Postprocessing",
                        	"description": "Name of a function that will be called after the file was uploaded to the server. Arguments: table name, field name, file info array, file path",
                        	"type": "string",
                            "minLength": 1
                        },
                        "reset": {
                            "title": "Skip Fetching Value When Editing?",
                        	"description": "Enabling this means that when editing a record its current value is not fetched into the form control.",
                        	"type": "boolean",
                            "default": false
                        },
                        "min": {
                            "title": "Minimum Value",
                        	"description": "Define the minimum value for the field (only relevant for number fields)",
                        	"type": "number"
                        },
                        "max": {
                            "title": "Maximum Value",
                        	"description": "Define the maximum value for the field (only relevant for number fields)",
                        	"type": "number"
                        },
                        "step": {
                            "title": "Step Size",
                        	"description": "Define the step size for up/down (e.g. 3 or 0.01) of number fields. If not restricted, set string to <code>any</code>",
                        	"type": [ "number", "string" ]
                        },
                        "cell_css": {
                            "title": "Cell CSS",
                        	"description": "This will be set as the style of the table cell in list view in the <code>style</code> attribute",
                            "type": "string",
                            "required": false
                        },
                        "number_format": {
                            "title": "Number Formatting",
                            "type": "object",
                            "description": "[optional] For number fields, these settings determine how the number will be displayed in list view.",
                            "required": false,
                            "properties": {
                                "template": {
                                    "title": "Format Template",
                                    "type": "string",
                                    "description": "Specify a combination of the following characters:<ul><li><code>a</code> ... insert text after the number (see setting below)</li><li><code>b</code> ... insert text before the number (see setting below)</li><li><code>c</code> ... insert currency symbol (see setting below)</li><li><code>e</code> ... insert non-breaking space</li><li><code>m</code> ... insert a minus sign if number is negative</li><li><code>n</code> ... insert the actual number</li><li><code>s</code> ... insert a plus sign if number is positive, or a minus sign if number is negative</li></ul>",
                                    "required": true,
                                    "default": "mn"
                                },
                                "decimals": {
                                    "title": "Decimals",
                                    "description": "Number of decimal digits to display",
                                    "type": "number",
                                    "required": true,
                                    "default": 2
                                },
                                "dec_point": {
                                    "title": "Decimals",
                                    "description": "Decimal point character",
                                    "type": "string",
                                    "required": true,
                                    "default": "."
                                },
                                "thousands_sep": {
                                    "title": "Thousands Separator",
                                    "description": "Thousands separator character",
                                    "type": "string",
                                    "required": true,
                                    "default": ","
                                },
                                "currency": {
                                    "title": "Currency Symbol",
                                    "description": "Currency symbol, only if <code>c</code> is included in the format template",
                                    "type": "string",
                                    "required": false
                                },
                                "before": {
                                    "title": "Text Before",
                                    "description": "Text to display before the number, only if <code>b</code> is included in the format template",
                                    "type": "string",
                                    "required": false
                                },
                                "after": {
                                    "title": "Text After",
                                    "description": "Text to display after the number, only if <code>a</code> is included in the format template",
                                    "type": "string",
                                    "required": false
                                }
                            }
                        },
                        "conditional_form_label": {
                            "title": "Conditional Field Label",
                        	"description": "In editing forms, this controls the field's label based on the value of another field (currently the other field must be of type <i>Enum</i> or <i>Lookup</i>)",
                        	"type": "object",
                            "required": [ "controlled_by", "mapping" ],
                            "properties": {
                                "controlled_by": {
                                    "title": "Controlling Field",
                                	"description": "The field within the same table that controls the label",
                                	"type": "string",
                                    "minLength": 1
                                },
                                "mapping": {
                                    "title": "Value Mappings",
                                	"description": "Object mapping the other field's values to conditional labesl of this field. If the othe field has a value that is not represented in this object, the label will be the default field label",
                                	"type": "object",
                                    "additionalProperties": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        },
                        "list_hide": {
                            "title": "Hide From List",
                        	"description": "Determines whether this field is hidden from record listings",
                        	"type": "boolean",
                            "default": false
                        },
                        "sort_expr": {
                            "title": "Sort Expression",
                        	"description": "If a table is sorted in <code>list</code> view, this expression defines how the field to sort is handled in the <code>ORDER BY</code> clause using <code>sprintf()</code>. The default <code>%s</code> expression results in normal sorting behavior using <code>ORDER BY</code> with simply the fieldname. Use this setting e.g. for custom sorting using functions. Example: <code>naturalsort(%s)</code>",
                        	"type": "string",
                            "minLength": 1,
                            "default": "%s"
                        },
                        "max_decimals": {
                            "title": "Maximum Decimals to Display",
                        	"description": "Allows specifying the maximum number of digits to display for number fields (ignored for other field types). If an integer is provided, this will be the maximum number of digits; if an object is provided, its properties map actions (<code>view</code>, <code>list</code>) to the maximum number of digits to show in the view corresponding to the action, e.g. <code>\"view\": 10, \"list\": 3</code> will limit the display to 10 decimal digits in <code>view</code> mode, and to 3 digits in <code>list</code> mode). If this setting is not provided, any numeric value will be rendered after it has been cast to float",
                        	"oneOf": [
                                {
                                    "title": "Number",
                                    "type": "integer",
                                    "minimum": 0
                                },
                                {
                                    "title": "Depending on View",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                }
                            ]
                        },
                        "tab": {
                            "title": "Form Tab",
                        	"description": "If this table uses a tabulated form, refer the identifier of the tab to which this field belongs. In a tabbed form, if the field's tab identifier is missing, it is assumed that the field belongs to the first tab.",
                        	"type": "string",
                            "minLength": 1
                        },
                        "map_picker": {
                            "title": "Map Picker",
                        	"description": "For PostGIS Geometry fields, this objects controls how the user will be able to pick a point from a map that appears in a popup window",
                        	"type": "object",
                            "properties": {
                                "map_options": {
                                    "title": "Map Options",
                                	"description": "An object that will be passed on as a Map Options object to the Leaflet <code>L.Map</code> constructor (see <a href='http://leafletjs.com/reference#map-options' target='_blank'>http://leafletjs.com/reference#map-options</a>)",
                                	"type": "object",
                                    "additionalProperties": true
                                },
                                "draw_options": {
                                    "title": "Map Options",
                                	"description": "An object that will be passed on as a DrawOptions object to the Leaflet.Draw <code>L.Control.Draw</code> constructor (see <a href='https://leaflet.github.io/Leaflet.draw/docs/leaflet-draw-latest.html#drawoptions' target='_blank'>https://leaflet.github.io/Leaflet.draw/docs/leaflet-draw-latest.html#drawoptions</a>)",
                                	"type": "object",
                                    "additionalProperties": true
                                },
                                "script": {
                                    "title": "Scripts to Include",
                                    "description": "Any javascript files to include. Two javascript functions will be called form the map picker, if these functions exist:<ul><li><code>map_picker_init_map()</code> immediately after Leaflet has occupied the map div</li><li><code>map_picker_finish_init()</code> immediately after the map picker initialization is completed</li></ul>In the script, the following global variables will be available:<ul><li><code>map: L.Map</code> - the Leaflet map</li><li><code>curPointLayer: L.Layer</code> - the Leaflet layer that contains the pre-existing point</li><li><code>drawnItems: L.FeatureGroup</code> - the feature group object that Leaflet.Draw uses to capture the user-drawn layers</li></ul>",
                                    "type": "array",
                                    "items": {
                                        "title": "Script",
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        },
                        "placeholder": {
                            "title": "Placeholder",
                        	"description": "Force a particular placeholder text to be displayed in the respective form control during record editing. By default, no placeholders are displayed, except for <i>Enum</i> and <i>Lookup</i> fields, which will display a hint to click the dropdown. Setting a placeholder is particularly useful when the form control is part of a group of fields (see setting <i>Field Groups</i>).",
                        	"type": "string",
                            "minLength": 1
                        },
                        "field_groups": {
                            "title": "Field Groups",
                        	"description": "Allows to define a number of field groups for the form. A field group has a label (like any normal field), but the field group can have multiple form controls in one form row",
                        	"type": "array",
                            "items": {
                                "title": "Field Group",
                                "type": "object",
                                "required": ["label", "fields"],
                                "properties": {
                                    "label": {
                                        "title": "Label",
                                    	"description": "The label to display on the form, similar to the field/label setting",
                                    	"type": "string",
                                        "minLength": 1
                                    },
                                    "fields": {
                                        "title": "Fields",
                                    	"description": "An object mapping the field name (each must be present in <i>Fields</i>) to the number of columns which the field's form control shall occupy in the form. This value must be an integer between 1 and 12. One row in the form consists if 12 columns. When the 12 columns are exceeded, a new row will begin automatically.",
                                    	"type": "object",
                                        "additionalProperties": {
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 12
                                        }
                                    },
                                    "help": {
                                        "title": "Help Text",
                                    	"description": "The help popup text, similar to the field/help setting",
                                    	"type": "string"
                                    },
                                    "label_tooltip": {
                                        "title": "Label Tooltip",
                                    	"description": "Tooltip text to display when the mouse hovers over the field group's label",
                                    	"type": "string"
                                    }
                                }
                            }
                        },
                        "datetime_picker": {
                            "title": "Date/Time Picker",
                        	"description": "For <i>Text Line</i> fields, use this to attach a datetime picker to this field (useful e.g. for timestamp, time or date fields in the DB). The settings object can include any of the settings allowed by eonasdan's bootstrap-datetimepicker at initialization (ee <a href='http://eonasdan.github.io/bootstrap-datetimepicker/Options/' target='_blank'>http://eonasdan.github.io/bootstrap-datetimepicker/Options/</a>). Note that the <code>showClear</code> setting will be autoamtically set based on whether the field is required or not; and the <code>defaultDate</code> setting only has an effect if the field has no value yet in the DB. Additional to the picker options you can add a setting <code>mainIcon</code> to this object, which will control the icon displayed in the input control; use any glyphicon class, by default <code>glyphicon glyphicon-calendar</code> will be used.",
                        	"type": "object"
                        },
                        "conditional_display": {
                            "title": "Conditional Display",
                        	"description": "This array controls the visibility of this field in the new/edit forms based on the value of other fields. The array consists of conditional expressions, optionally separated by logical operators <code>OPERATOR_AND</code> or <code>OPERATOR_OR</code>. Expressions can be grouped and nested using <code>OPERATOR_GROUP_OPEN</code> (corresponds to an opening parenthesis) and <code>OPERATOR_GROUP_CLOSE</code> (corresponds to closing parenthesis)",
                        	"type": "array",
                            "items": {
                                "title": "Operator/Condition",
                                "oneOf": [
                                    {
                                        "title": "Operator",
                                        "type": "string",
                                        "enum": [ "OPERATOR_AND", "OPERATOR_OR", "OPERATOR_GROUP_OPEN", "OPERATOR_GROUP_CLOSE" ],
                                        "required": true
                                    },
                                    {
                                        "title": "Condition",
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": ["field", "operator", "value"],
                                        "properties": {
                                            "field": {
                                                "title": "Controlling Field",
                                            	"description": "The other form field whose value is relevant for the expression",
                                            	"type": "string",
                                                "minLength": 1
                                            },
                                            "operator": {
                                                "title": "Operator",
                                            	"description": "The operator to compare the other field's value; if any of <code>OPERATOR_ARRAY_*</code> is used, the referenced field must be type <i>Lookup</i> with <code>CARDINALITY_MULTIPLE</code>, otherwise errors may occur.",
                                            	"type": "string",
                                                "enum": ["OPERATOR_EQUALS", "OPERATOR_NOT_EQUALS", "OPERATOR_BETWEEN", "OPERATOR_GREATER", "OPERATOR_GREATER_OR_EQUALS", "OPERATOR_LOWER", "OPERATOR_LOWER_OR_EQUALS", "OPERATOR_ARRAY_CONTAINS", "OPERATOR_ARRAY_SIZE_LOWER", "OPERATOR_ARRAY_SIZE_EQUALS", "OPERATOR_ARRAY_NOT_CONTAINS", "OPERATOR_ARRAY_SIZE_GREATER", "OPERATOR_ARRAY_SIZE_NOT_EQUALS", "OPERATOR_ARRAY_SIZE_LOWER_OR_EQUALS", "OPERATOR_ARRAY_SIZE_GREATER_OR_EQUALS"]
                                            },
                                            "value": {
                                                "title": "Value",
                                                "description": "The value will be used as right hand operand of the expression. Its type should match the other field's type. For <code>OPERATOR_EQUALS</code> and <code>OPERATOR_NOT_EQUALS</code>, an array can be given here, testing for set membership (<code>OPERATOR_EQUALS</code>) or non-set membership (<code>OPERATOR_NOT_EQUALS</code>)",
                                                "type": [ "null", "integer", "number", "boolean", "array", "string" ]
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        }
    }
}
